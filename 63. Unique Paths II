class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int col=obstacleGrid.size();
        int row=obstacleGrid[0].size();
        
        if(obstacleGrid[0][0]==1 || obstacleGrid[col-1][row-1]==1)//如果起点或者终点有障碍 则无法到达
            return 0;
        vector<vector<int>>dp(col,vector<int>(row));
        dp[0][0]=1;//初始值
        for(int i=1;i<row;i++){//初始化第一行
            if(obstacleGrid[0][i]==0)  dp[0][i]=dp[0][i-1];//如果obstacleGrid为0才计算
        }
            
        for(int i=1;i<col;i++){//初始化第一列
            if(obstacleGrid[i][0]==0)  dp[i][0]=dp[i-1][0];
        }
        
        for(int i=1;i<col;i++){
            for(int j=1;j<row;j++){//计算中间部分
                if(obstacleGrid[i][j]==0)   dp[i][j]=dp[i-1][j]+dp[i][j-1];
            }
        }
        
         return dp[col-1][row-1];   
    }
};
