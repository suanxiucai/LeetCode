/* 81. Search in Rotated Sorted Array II
Follow up for "Search in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?

Write a function to determine if a given target is in the array. */
//相对于第80题，这里多了一个条件。如果是1 3 1 1 1 1，查找3，此时begin为1 mid为1 end为1  很难判断了，只能顺序查找
class Solution {//画图理解
public:
    bool search(vector<int>& nums, int target) {
        if(nums.empty())
            return false;
		int begin=0;
        int end=nums.size()-1;
		while(begin<=end){
			int mid=begin+(end-begin)/2;//注意！
			if(target==nums[mid])
				return true;
			if(nums[mid]>nums[begin]){//mid在前半个数组里
				if(target>=nums[begin] && target<nums[mid])//考虑target相对于begin mid end的位置
					end=mid-1;
				else
					begin=mid+1;
			}
			else if(nums[mid]<nums[begin]){//mid在前后个数组里
				if(target>nums[mid] && target<=nums[end])//考虑target相对于begin mid end的位置
					begin=mid+1;
				else
					end=mid-1;
			}
			else//nums[mid]==nums[begin]
			    begin++;
				
		}
		return false;
    }
};


