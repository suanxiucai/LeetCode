//n!=2^x*3^y*5^z*……，0的个数跟有多少个10相乘有关，而要产生10//,分解下就得有2和5，很容易发现，阶乘过程中，能分解成5的数一定比能分解成2的
//数要少
//因此，就看n!末尾0的个数等于n!中执子5的个数。10！=1*2*……10，其中的5和10能分解出5，所以结果为2.  15！=1*2*……15，其中5 10 //15可以分解出5，
//因此结果为3.  25！中5 10 15 20 25都可以分解出5，并且25可以分解出两个5，一次结果为6.所以除了计算n/5， 还要计算n/5/5,
//   n/5/5/5, n/5/5/5/5, …, n/5/5/5,,,/5直到商为0
class Solution {
public:
    int trailingZeroes(int n) {
        int count_five=0;
        while(n){
            count_five+=n/5;
            n/=5;
        }
        return count_five;
    }
};
