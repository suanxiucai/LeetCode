//You are given an n x n 2D matrix representing an image.
//Rotate the image by 90 degrees(clockwise).
//Follow up :
//Could you do this in - place ?

#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include<numeric>
#include<string>
using namespace std;

//分析，先将矩阵沿着副对角线交换，然后再将矩阵上下对称交换。
void Print(vector<vector<int>>matrix) {//打印  辅助函数
	for (auto i : matrix) {
		for (auto j : i)
			cout << j << " ";
		cout << endl;
	}
	cout << endl;
}
void SWAP_1(vector<vector<int>>&matrix) {//沿着副对角线交换
	int n = matrix.size();
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n-1-i; j++) {
			swap(matrix[i][j], matrix[n-1-j][n-1-i]);//对角线对称的元素相互交换，推一下公式
		}
	}
	Print(matrix);
}

void SWAP_2(vector<vector<int>>&matrix) {//上下交换
	int n = matrix.size();
	for (int i = 0; i < n / 2; i++) {
		for (int j = 0; j < n; j++) {
			swap(matrix[i][j], matrix[n - 1 - i][j]);
		}
	}
	Print(matrix);
}

void rotate(vector<vector<int>>& matrix) {
	if (matrix.size() == 1)
		return;
	SWAP_1(matrix);
	SWAP_2(matrix);
}
void main() {
	vector<vector<int>>a = { {1,2,3},{4,5,6},{7,8,9} };
	Print(a);
	rotate(a);

}

