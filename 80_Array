//80. Remove Duplicates from Sorted Array II
// Follow up for "Remove Duplicates":
// What if duplicates are allowed at most twice?

// For example,
// Given sorted array nums = [1,1,1,2,2,3],

// Your function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3. It doesn't matter what you leave // // beyond the new length.


class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if(nums.size()<2)
           return nums.size();
        int id=0;
		int count=0;
		for(unsigned int i=1;i<nums.size();i++){
			if(nums[i]!=nums[i-1]){
				count=0;
				id++;
				nums[id]=nums[i];
			}
            else{//对于重复出现一次的，依然复制，但是大于1次的就不再复制
			   count++;
			   if(count==1){
				  id++;
				   nums[id]=nums[i];
			    }
		}			
		}
		return id+1;//因为当初id是从0开始计数的
    }
};

//更简单的写法，并且可扩展性更高
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if(nums.size()<=2)
			return nums.size();
		int id=2;
		for(int i=2;i<nums.size();i++){
			if(nums[i]!=nums[index-2]){
				nums[index]=nums[i]
				index++;
				}
			}
		}
    }
};
