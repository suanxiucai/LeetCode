#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include<numeric>
#include<string>
using namespace std;

 struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
};
//思路  一个指针每次走两步 一个指针每次走一步 看能不能相遇
 bool hasCycle(ListNode *head) {
	if (head == nullptr)
		return false;
	ListNode *p1 = head;
	ListNode *p2 = p1->next;
	while (p2)
	{
		if (p2->next) {
			p2 = p2->next->next;//走两步
			p1 = p1->next;//走一步
		}
		else//如果p2->next为空，则证明链表有尾部的null，链表肯定没环
			return false;


		if (p1 == p2)//相遇
			return true;
	}
	return false;
 }
void main() {
	

}
